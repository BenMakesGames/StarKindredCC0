// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarKindred.Common.Services;

#nullable disable

namespace StarKindred.Common.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20220807190110_AddStoryMissionRecruitRewards")]
    partial class AddStoryMissionRecruitRewards
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RelationshipVassal", b =>
                {
                    b.Property<Guid>("RelationshipsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VassalsId")
                        .HasColumnType("char(36)");

                    b.HasKey("RelationshipsId", "VassalsId");

                    b.HasIndex("VassalsId");

                    b.ToTable("RelationshipVassal");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Adventure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDark")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ReleaseMonth")
                        .HasColumnType("int");

                    b.Property<int>("ReleaseNumber")
                        .HasColumnType("int");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseNumber")
                        .IsUnique();

                    b.HasIndex("Title")
                        .IsUnique();

                    b.HasIndex("ReleaseYear", "ReleaseMonth")
                        .IsUnique();

                    b.ToTable("Adventures");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AdventureStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdventureId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Decoration")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("MaxVassals")
                        .HasColumnType("int");

                    b.Property<int>("MinVassals")
                        .HasColumnType("int");

                    b.Property<string>("Narrative")
                        .HasColumnType("longtext");

                    b.Property<string>("PinOverride")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("PreviousStep")
                        .HasColumnType("int");

                    b.Property<Guid?>("RecruitId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RequiredElement")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Treasure")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UnlockableAvatar")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<float>("X")
                        .HasColumnType("float");

                    b.Property<float>("Y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RecruitId");

                    b.HasIndex("AdventureId", "Step")
                        .IsUnique();

                    b.ToTable("AdventureSteps");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Alliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LeaderId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedOn");

                    b.HasIndex("LeaderId");

                    b.HasIndex("Level");

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AllianceLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("AllianceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("CreatedOn");

                    b.ToTable("AllianceLogs");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AllianceRank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AllianceId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanKick")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanRecruit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanTrackGiants")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.ToTable("AllianceRanks");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AllianceRecruitStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AllianceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("InviteCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("InviteCodeActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("InviteCodeGeneratedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("OpenInvitationActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OpenInvitationMaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("OpenInvitationMinLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId")
                        .IsUnique();

                    b.ToTable("AllianceRecruitStatuses");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedOn");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("LastHarvestedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("PowerLastActivatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Position");

                    b.HasIndex("UserId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Decoration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("Decorations");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Giant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AllianceId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset>("ExpiresOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartsOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId")
                        .IsUnique();

                    b.ToTable("Giants");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.GiantContribution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("AttackDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GiantContributions");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Goodie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Goodies");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.MagicLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("ExpiresOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MagicLogins");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.PersonalLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedOn");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalLogs");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.PersonalLogTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PersonalLogId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalLogId");

                    b.ToTable("PersonalLogTags");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Relationship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.StatusEffect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("VassalId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("VassalId");

                    b.ToTable("StatusEffects");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.TimedMission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset?>("CompletesOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Element")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("StartedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Treasure")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Weapon")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimedMissions");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Town", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanDecorate")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("LastGoodie")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset>("NextRumor")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.TownDecoration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("FlipX")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Scale")
                        .HasColumnType("int");

                    b.Property<Guid>("TownId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<float>("X")
                        .HasColumnType("float");

                    b.Property<float>("Y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("TownDecorations");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Treasure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Treasures");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset?>("EmailVerifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("LastAttackedGiant")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("LastMissionCompletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Passphrase")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LastMissionCompletedOn");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAdventure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdventureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdventureId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdventures");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAdventureStepCompleted", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdventureStepId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CompletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdventureStepId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdventureStepCompleted");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAdventureStepInProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdventureStepId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CompletesOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("StartedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdventureStepId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdventureStepInProgress");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAlliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AllianceId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AllianceRankId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("JoinedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("AllianceRankId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserAlliances");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("ExpiresOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserUnlockedAvatar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTimeOffset>("UnlockedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UnlockedOn");

                    b.HasIndex("UserId");

                    b.ToTable("UserUnlockedAvatars");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserVassalTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Title");

                    b.HasIndex("UserId", "Title")
                        .IsUnique();

                    b.ToTable("UserVassalTags");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Vassal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Favorite")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<Guid?>("MissionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nature")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Portrait")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RetirementPoints")
                        .HasColumnType("int");

                    b.Property<string>("Sign")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("TimedMissionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserAdventureStepInProgressId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("WeaponId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Willpower")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Favorite");

                    b.HasIndex("Level");

                    b.HasIndex("MissionId");

                    b.HasIndex("Name");

                    b.HasIndex("TimedMissionId");

                    b.HasIndex("UserAdventureStepInProgressId");

                    b.HasIndex("UserId");

                    b.HasIndex("WeaponId")
                        .IsUnique();

                    b.ToTable("Vassals");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.VassalTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Element")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("Nature")
                        .HasColumnType("int");

                    b.Property<string>("Portrait")
                        .HasColumnType("longtext");

                    b.Property<int?>("Sign")
                        .HasColumnType("int");

                    b.Property<int?>("Species")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VassalTemplate");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Durability")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MaxDurability")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PrimaryBonus")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("SecondaryBonus")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Level");

                    b.HasIndex("UserId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("UserVassalTagVassal", b =>
                {
                    b.Property<Guid>("TagsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VassalsId")
                        .HasColumnType("char(36)");

                    b.HasKey("TagsId", "VassalsId");

                    b.HasIndex("VassalsId");

                    b.ToTable("UserVassalTagVassal");
                });

            modelBuilder.Entity("RelationshipVassal", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Relationship", null)
                        .WithMany()
                        .HasForeignKey("RelationshipsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.Vassal", null)
                        .WithMany()
                        .HasForeignKey("VassalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AdventureStep", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Adventure", "Adventure")
                        .WithMany("AdventureSteps")
                        .HasForeignKey("AdventureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.VassalTemplate", "Recruit")
                        .WithMany()
                        .HasForeignKey("RecruitId");

                    b.Navigation("Adventure");

                    b.Navigation("Recruit");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Alliance", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AllianceLog", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Alliance", "Alliance")
                        .WithMany("Logs")
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AllianceRank", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Alliance", "Alliance")
                        .WithMany("AllianceRanks")
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AllianceRecruitStatus", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Alliance", "Alliance")
                        .WithOne("AllianceRecruitStatus")
                        .HasForeignKey("StarKindred.Common.Entities.Db.AllianceRecruitStatus", "AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Building", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany("Buildings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Decoration", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Giant", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Alliance", "Alliance")
                        .WithOne("Giant")
                        .HasForeignKey("StarKindred.Common.Entities.Db.Giant", "AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.GiantContribution", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Goodie", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.MagicLogin", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Mission", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany("Missions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.PersonalLog", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.PersonalLogTag", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.PersonalLog", "PersonalLog")
                        .WithMany("PersonalLogTags")
                        .HasForeignKey("PersonalLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalLog");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Resource", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany("Resources")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.StatusEffect", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Vassal", "Vassal")
                        .WithMany("StatusEffects")
                        .HasForeignKey("VassalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vassal");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.TimedMission", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Town", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.TownDecoration", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Town", "Town")
                        .WithMany("Decorations")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Town");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Treasure", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.User", b =>
                {
                    b.OwnsOne("StarKindred.Common.Entities.HSL", "Color", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Hue")
                                .HasColumnType("int");

                            b1.Property<int>("Luminosity")
                                .HasColumnType("int");

                            b1.Property<int>("Saturation")
                                .HasColumnType("int");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Color")
                        .IsRequired();
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAdventure", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Adventure", "Adventure")
                        .WithMany()
                        .HasForeignKey("AdventureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adventure");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAdventureStepCompleted", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.AdventureStep", "AdventureStep")
                        .WithMany("UserAdventureStepsCompleted")
                        .HasForeignKey("AdventureStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdventureStep");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAdventureStepInProgress", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.AdventureStep", "AdventureStep")
                        .WithMany()
                        .HasForeignKey("AdventureStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdventureStep");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAlliance", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Alliance", "Alliance")
                        .WithMany("Members")
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.AllianceRank", "AllianceRank")
                        .WithMany("UserAlliances")
                        .HasForeignKey("AllianceRankId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithOne("UserAlliance")
                        .HasForeignKey("StarKindred.Common.Entities.Db.UserAlliance", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");

                    b.Navigation("AllianceRank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserSession", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserUnlockedAvatar", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserVassalTag", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany("VassalTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Vassal", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.Mission", "Mission")
                        .WithMany("Vassals")
                        .HasForeignKey("MissionId");

                    b.HasOne("StarKindred.Common.Entities.Db.TimedMission", "TimedMission")
                        .WithMany("Vassals")
                        .HasForeignKey("TimedMissionId");

                    b.HasOne("StarKindred.Common.Entities.Db.UserAdventureStepInProgress", "UserAdventureStepInProgress")
                        .WithMany("Vassals")
                        .HasForeignKey("UserAdventureStepInProgressId");

                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.Weapon", "Weapon")
                        .WithOne("Vassal")
                        .HasForeignKey("StarKindred.Common.Entities.Db.Vassal", "WeaponId");

                    b.Navigation("Mission");

                    b.Navigation("TimedMission");

                    b.Navigation("User");

                    b.Navigation("UserAdventureStepInProgress");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Weapon", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserVassalTagVassal", b =>
                {
                    b.HasOne("StarKindred.Common.Entities.Db.UserVassalTag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarKindred.Common.Entities.Db.Vassal", null)
                        .WithMany()
                        .HasForeignKey("VassalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Adventure", b =>
                {
                    b.Navigation("AdventureSteps");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AdventureStep", b =>
                {
                    b.Navigation("UserAdventureStepsCompleted");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Alliance", b =>
                {
                    b.Navigation("AllianceRanks");

                    b.Navigation("AllianceRecruitStatus");

                    b.Navigation("Giant");

                    b.Navigation("Logs");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.AllianceRank", b =>
                {
                    b.Navigation("UserAlliances");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Mission", b =>
                {
                    b.Navigation("Vassals");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.PersonalLog", b =>
                {
                    b.Navigation("PersonalLogTags");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.TimedMission", b =>
                {
                    b.Navigation("Vassals");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Town", b =>
                {
                    b.Navigation("Decorations");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.User", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("Missions");

                    b.Navigation("Resources");

                    b.Navigation("UserAlliance");

                    b.Navigation("VassalTags");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.UserAdventureStepInProgress", b =>
                {
                    b.Navigation("Vassals");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Vassal", b =>
                {
                    b.Navigation("StatusEffects");
                });

            modelBuilder.Entity("StarKindred.Common.Entities.Db.Weapon", b =>
                {
                    b.Navigation("Vassal");
                });
#pragma warning restore 612, 618
        }
    }
}
